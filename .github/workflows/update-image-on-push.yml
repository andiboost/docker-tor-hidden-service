name: "Update image when Dockerfile is changed"

on:
  push:
    branches:
    - master
    paths-ignore:
    - 'README.md'
  workflow_dispatch:

env:
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/tor

jobs:
  rebuild-container:
    name: "Rebuild Container with the latest base image"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare platform matrix
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}
      -
        name: Prepare outputs
        id: prep
        run: |
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3.4.0
        with:
          platforms: linux/arm64
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Checkout repository
        uses: actions/checkout@v4
      -
        name: Get short SHA
        id: get_short_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      -
        name: Build and push to Docker Hub and GitHub Packages Docker Registry
        uses: docker/build-push-action@v6.13.0
        id: docker_build_push
        with:
          type: image
          push: true
          push-by-digest: true
          name-canonical: true
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.GHCR_REPO }}:latest
            ${{ env.GHCR_REPO }}:${{ steps.get_short_sha.outputs.sha_short }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.GHCR_REPO }}:latest
          cache-to: type=inline

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GHCR
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.GHCR_REPO }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.GHCR_REPO }}:${{ steps.meta.outputs.version }}
